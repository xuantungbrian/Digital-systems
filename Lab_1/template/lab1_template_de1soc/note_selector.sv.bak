module note_selector (input logic CLK_50M, output logic sel_note, output logic [23:0] sel_note_name)

	logic Do1, Re, Mi, Fa, Sol, La, Si, Do2;
	logic [2:0] sel;
	assign sel = SW[3:1];

	//Do1 (523Hz)
	Clk_divider  
	Gen_Do1
	(
	.inclk(CLK_50M),
	.outclk(Do1),
	.outclk_Not(),
	.div_clk_count(32'hBAB9), //change this if necessary to suit your module
	.Reset(1'h1)); 

	//Re (587Hz)
	Clk_divider 
	Gen_Re
	(
	.inclk(CLK_50M),
	.outclk(Re),
	.outclk_Not(),
	.div_clk_count(32'hA65D), //change this if necessary to suit your module
	.Reset(1'h1)); 

	//Mi (659Hz)
	Clk_divider  
	Gen_Mi
	(
	.inclk(CLK_50M),
	.outclk(Mi),
	.outclk_Not(),
	.div_clk_count(32'h9430), //change this if necessary to suit your module
	.Reset(1'h1)); 

	//Fa (698Hz)
	Clk_divider 
	Gen_Fa
	(
	.inclk(CLK_50M),
	.outclk(Fa),
	.outclk_Not(),
	.div_clk_count(32'h8BE9), //change this if necessary to suit your module
	.Reset(1'h1)); 

	//Sol (783Hz)
	Clk_divider 
	Gen_Sol
	(
	.inclk(CLK_50M),
	.outclk(Sol),
	.outclk_Not(),
	.div_clk_count(32'h7CB8), //change this if necessary to suit your module
	.Reset(1'h1)); 

	//La (880Hz)
	Clk_divider  
	Gen_La
	(
	.inclk(CLK_50M),
	.outclk(La),
	.outclk_Not(),
	.div_clk_count(32'h6EF9), //change this if necessary to suit your module
	.Reset(1'h1)); 

	//Si (987Hz)
	Clk_divider 
	Gen_Si
	(
	.inclk(CLK_50M),
	.outclk(Si),
	.outclk_Not(),
	.div_clk_count(32'h62F1), //change this if necessary to suit your module
	.Reset(1'h1)); 

	//Do2 (1046Hz)
	Clk_divider 
	Gen_Do2
	(
	.inclk(CLK_50M),
	.outclk(Do2),
	.outclk_Not(),
	.div_clk_count(32'h5D5D), //change this if necessary to suit your module
	.Reset(1'h1)); 


	always_ff @(posedge CLK_50M)
		case (sel)
			3'd0: begin
						sel_note <= Do1;
						sel_note_name <= {character_D, character_lowercase_o, character_1};
					end
			3'd1: begin
						sel_note <= Re;
						sel_note_name <= {character_R, character_lowercase_e};
					end
			3'd2: begin
						sel_note <= Mi;
						sel_note_name <= {character_M, character_lowercase_i};
					end
			3'd3: begin
						sel_note <= Fa;
						sel_note_name <= {character_F, character_lowercase_a};
					end
			3'd4: begin
						sel_note <= Sol;
						sel_note_name <= {character_S, character_lowercase_o, character_lowercase_l};
					end	
			3'd5: begin 
						sel_note <= La;
						sel_note_name <= {character_L, character_lowercase_a};
					end
			3'd6: begin
						sel_note <= Si;
						sel_note_name <= {character_S, character_lowercase_i};
					end
			3'd7: begin
						sel_note <= Do2;
						sel_note_name <= {character_D, character_lowercase_o, character_2};
					end
			default: begin
							sel_note <= 1'bx;
							sel_note_name <= {character_N, character_lowercase_o, character_lowercase_n, character_lowercase_e};
						end
		endcase
endmodule